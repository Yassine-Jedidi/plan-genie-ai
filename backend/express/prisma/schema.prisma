// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Custom User model that syncs with Supabase auth.users
model User {
  id         String   @id
  email      String   @unique
  full_name  String?
  avatar_url String?
  theme      String?  @default("system") // 'light', 'dark', or 'system'
  colorTheme String?  @default("default") // 'default', 'red', 'blue', etc.
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  tasks      Task[]
  events     Event[]
  bilans     Bilan[]
}

model Task {
  id            String       @id @default(uuid())
  title         String
  deadline      String?
  deadline_text String?
  priority      String?
  status        String?
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  user_id       String
  user          User         @relation(fields: [user_id], references: [id])
  bilanEntries  BilanEntry[]
}

model Event {
  id             String    @id @default(uuid())
  title          String
  date_time      DateTime?
  date_time_text String?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  user_id        String
  user           User      @relation(fields: [user_id], references: [id])
}

model Bilan {
  id         String       @id @default(uuid())
  date       DateTime     @default(now())
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  user_id    String
  user       User         @relation(fields: [user_id], references: [id])
  entries    BilanEntry[]
}

model BilanEntry {
  id            String   @id @default(uuid())
  minutes_spent Int      @default(0)
  notes         String?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  bilan_id      String
  bilan         Bilan    @relation(fields: [bilan_id], references: [id], onDelete: Cascade)
  task_id       String
  task          Task     @relation(fields: [task_id], references: [id], onDelete: Cascade)
}
